<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
     
     <!-- 引入jdbc配置文件 -->  
     <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
               <value>classpath:properties/*.properties</value>
                <!--要是有多个配置文件，只需在这里继续添加即可 -->
            </list>
        </property>
    </bean>
    
<!-- <mvc:annotation-driven />
	 <bean id="handlerMapping"
            class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
         <property name="useSuffixPatternMatch" value="false" />

    </bean>
 
	启动Spring MVC的注解功能，完成请求和注解POJO的映射
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
	  <property name="webBindingInitializer">  
        <bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">  
            <property name="conversionService" ref="conversionService" />  
        </bean>  
    </property>  
	</bean>
 	<bean id="conversionService" class="org.springframework.format.support.DefaultFormattingConversionService"/>
 	<mvc:annotation-driven />  
 	RESTful风格链接,处理静态资源无法访问的问题
    <mvc:default-servlet-handler /> -->
    
    <mvc:interceptors>
	    <mvc:interceptor>
	        <mvc:mapping path="/**"/>
	        <mvc:exclude-mapping path="/"/>
	        <!-- 登陆url -->
	        <mvc:exclude-mapping path="/user/login"/>
	        <!-- 获取登陆状态url -->
	        <mvc:exclude-mapping path="/user/loginStatus"/>
	        <!-- 退出 -->
	        <mvc:exclude-mapping path="/user/logout"/>
	        <!-- 注册url -->
	        <mvc:exclude-mapping path="/user/register"/>
	        <!-- 注册发送邮件url -->
	        <mvc:exclude-mapping path="/user/sendVerifyCode"/>
	        <!-- 找回密码 -->
	        <mvc:exclude-mapping path="/user/findPassword"/>
	        <mvc:exclude-mapping path="/user/openIndex"/>
	        
	        <bean class="com.khzpds.secure.LoginInterceptor" />
	    </mvc:interceptor>
    </mvc:interceptors>

	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- 不使用properties来配置 -->
		<!-- <property name="driverClassName" value="com.mysql.jdbc.Driver" /> 
			<property name="url" value="jdbc:mysql://localhost:3306/learning" /> 
			<property name="username" value="root" /> 
			<property name="password" value="christmas258@" /> -->
	   <!-- 使用properties来配置 -->
		<property name="driverClassName">
			<!-- <value>${jdbc_driverClassName}</value> -->
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="url">
			<!-- <value>${jdbc_url}</value> -->
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<!-- <value>${jdbc_username}</value> -->
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<!-- <value>${jdbc_password}</value> -->
			<value>${jdbc.password}</value>
		</property>
	</bean>

	<!-- 自动扫描了所有的XxxxMapper.xml对应的mapper接口文件，这样就不用一个一个手动配置Mpper的映射了，只要Mapper接口类和Mapper映射文件对应起来就可以了。 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="com.khzpds.dao" />
	</bean>

    <!-- 配置Mybatis的文件 ，mapperLocations配置**Mapper.xml文件位置，configLocation配置mybatis-config文件位置-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath*:com/khzpds/mapper/**/*.xml"/>  
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- <property name="typeAliasesPackage" value="com.tiantian.ckeditor.model" 
			/> -->
	</bean>

	<!-- 自动扫描注解的bean -->
	<context:component-scan base-package="com.khzpds.service" />

	<!-- 配置多文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<!-- 上传文件大小限制为200M，2*1024*1024*100 -->
			<value>209715200</value>
		</property>
		<property name="maxInMemorySize">
			<value>209715200</value>
		</property>
	</bean>
</beans>
